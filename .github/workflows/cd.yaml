name: Deploy to AWS S3

on:
  push:
    branches: ['main', 'dev']
  release:
    types: [published]

env:
  NODE_VERSION: 16
  DEPLOYMENT_KIND: widget
  DEPLOYMENT_TARGET: weather
  DEPLOYMENT_STATIC_FILES: staffbase.user-profile-client.min.js
  DEPLOYMENT_SOURCE: samples/weather-forecast/dist
  

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node JS
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: samples/weather-forecast/yarn.lock
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@staffbase'

      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.STAFFBOT_NPM_READ }}" >> samples/weather-forecast/.npmrc

      - name: Yarn install
        run: yarn install --cwd samples/weather-forecast --frozen-lockfile

      - name: Build widget
        run: yarn --cwd samples/weather-forecast build

      - name: Prepare Deployment
        run: |
          mkdir samples/weather-forecast/icons
          cp samples/weather-forecast/resources/weather-forecast.svg samples/weather-forecast/dist/icons

      - name: Publish to S3 DE Prod
        if:  startsWith(github.ref, 'refs/tags/')
        uses: Staffbase/deploy-web-assets@0.1.0
        with:
          source: ${{ env.DEPLOYMENT_SOURCE }}
          target: ${{ env.DEPLOYMENT_TARGET }}
          deployment_kind: ${{ env.DEPLOYMENT_KIND }}
          # Varnish settings
          static_files: ${{ env.DEPLOYMENT_STATIC_FILES }}
          frontend_cache_host: frontend-cache-main-de1.staffbase.com
          frontend_cache_password: ${{ secrets.FRONTEND_CACHE_PROD_DE1_PASSWORD }}

          # AWS specific settings
          aws_bucket: staffbasestatic-prod-de1
          aws_region: eu-central-1
          aws_access_key_id: ${{ secrets.PROD_DE1_aws_access_key_id_ID }}
          aws_access_key_secret: ${{ secrets.PROD_DE1_aws_access_key_id_SECRET }}

      - name: Deploy to S3 US Prod
        if: startsWith(github.ref, 'refs/tags/')
        uses: Staffbase/deploy-web-assets@0.1.0
        with:
          source: ${{ env.DEPLOYMENT_SOURCE }}
          target: ${{ env.DEPLOYMENT_TARGET }}
          deployment_kind: ${{ env.DEPLOYMENT_KIND }}
          # Varnish settings
          static_files: ${{ env.DEPLOYMENT_STATIC_FILES }}
          frontend_cache_host: frontend-cache-us1.staffbase.com
          frontend_cache_password: ${{ secrets.FRONTEND_CACHE_PROD_US1_PASSWORD }}

          # AWS specific settings
          aws_bucket: staffbasestatic-prod-us1
          aws_region: us-east-1
          aws_access_key_id: ${{ secrets.PROD_US1_aws_access_key_id_ID }}
          aws_access_key_secret: ${{ secrets.PROD_US1_aws_access_key_id_SECRET }}

      - name: Publish to S3 DE stage
        if: github.ref == 'refs/heads/main'
        uses: Staffbase/deploy-web-assets@0.1.0
        with:
          source: ${{ env.DEPLOYMENT_SOURCE }}
          target: ${{ env.DEPLOYMENT_TARGET }}
          deployment_kind: ${{ env.DEPLOYMENT_KIND }}
          # Varnish settings
          static_files: ${{ env.DEPLOYMENT_STATIC_FILES }}
          frontend_cache_host: frontend-cache-de1.staffbase.rocks
          frontend_cache_password: ${{ secrets.FRONTEND_CACHE_STAGE_DE1_PASSWORD }}

          # AWS specific settings
          aws_bucket: staffbasestatic-stage-de1
          aws_region: eu-central-1
          aws_access_key_id: ${{ secrets.STAGE_DE1_aws_access_key_id_ID }}
          aws_access_key_secret: ${{ secrets.STAGE_DE1_aws_access_key_id_SECRET }}

      - name: Publish to S3 DE dev
        if: github.ref == 'refs/heads/dev'
        uses: Staffbase/deploy-web-assets@0.1.0
        with:
          source: ${{ env.DEPLOYMENT_SOURCE }}
          target: ${{ env.DEPLOYMENT_TARGET }}
          deployment_kind: ${{ env.DEPLOYMENT_KIND }}
          # Varnish settings
          static_files: ${{ env.DEPLOYMENT_STATIC_FILES }}
          frontend_cache_host: frontend-cache-de1.staffbase.dev
          frontend_cache_password: ${{ secrets.FRONTEND_CACHE_DEV_DE1_PASSWORD }}

          # AWS specific settings
          aws_bucket: staffbasestatic-dev-de1
          aws_region: eu-central-1
          aws_access_key_id: ${{ secrets.DEV_DE1_aws_access_key_id_ID }}
          aws_access_key_secret: ${{ secrets.DEV_DE1_aws_access_key_id_SECRET }}
